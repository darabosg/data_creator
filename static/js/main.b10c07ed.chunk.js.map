{"version":3,"sources":["pages/Home.jsx","helpers/replaceAt.js","componenets/Creator/Schema/TypeSelect.jsx","componenets/Creator/Schema/ShemaInput.jsx","componenets/Creator/Schema/Schema.jsx","helpers/getType.js","helpers/clearData.js","componenets/Creator/Inputs/ArrayInputs.jsx","componenets/Creator/Inputs/InputLabel.jsx","componenets/Creator/Inputs/ObjectInputs.jsx","componenets/Creator/Inputs/SingleInput.jsx","componenets/Creator/Inputs/DataHub.jsx","helpers/initData.js","componenets/Creator/Inputs/Inputs.jsx","componenets/Creator/Output/Output.jsx","hooks/useLocalStorage.js","pages/Creator.jsx","pages/Searcher.jsx","App.js","index.js"],"names":["Home","to","replaceAt","array","index","value","copy","slice","TypeSelect","field","label","aboveSchema","setAboveSchema","objectDepth","arrayDepth","childrenSetter","state","children","htmlFor","type","id","name","onChange","e","target","key","schema","setSchema","SchemaInput","className","map","i","onClick","console","log","filter","_","newField","changeKey","length","Schema","ShemaInput","getType","Array","isArray","match","clearData","data","emptyData","getValue","item","uuidv4","makeEmpty","empty","Object","keys","forEach","ArrayInputs","setData","deleteArrayItem","clear","InputLabel","labelKey","of","ObjectInputs","dataKey","SingleInput","textInput","useRef","change","Number","current","focus","ref","rows","Math","ceil","getRows","readOnly","checked","DataHub","initData","newData","initialData","getEmptyValue","isThereData","Boolean","schemaType","isTypeChanged","makeInitialData","Inputs","setNewData","addToData","preventDefault","prev","onSubmit","Output","useState","lineLength","setLineLength","indentation","setIndentation","max","min","step","navigator","clipboard","writeText","beautify","cols","useLocalStorage","defaultValue","initial","JSON","parse","localStorage","getItem","setValue","useEffect","setItem","stringify","Creator","displayInputs","setDisplayInputs","displayOutput","setDisplayOutput","Searcher","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b10c07ed.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n    return (\n        <div>\n            <Link to='/create'><button>Create data</button></Link>\n            <Link to='/search'><button>Search in data</button></Link>\n        </div>\n    )\n}\n\nexport default Home\n","const replaceAt = (array, index, value) => {\n    const copy = array.slice(0)\n    copy[index] = value\n    return copy\n}\n\nexport default replaceAt\n","import replaceAt from '../../../helpers/replaceAt'\nimport React from 'react'\nimport SchemaInput from './ShemaInput'\n\nconst TypeSelect = ({\n    field,\n    label,\n    aboveSchema,\n    setAboveSchema,\n    index,\n    objectDepth,\n    arrayDepth,\n}) => {\n    const childrenSetter = state =>\n        setAboveSchema(\n            replaceAt(aboveSchema, index, { ...field, children: state })\n        )\n\n    const changeType = e => {\n        if (e.target.value === 'array') {\n            setAboveSchema(\n                replaceAt(aboveSchema, index, {\n                    ...field,\n                    type: e.target.value,\n                    children: [{ key: 0, type: 'string' }],\n                })\n            )\n        } else if (e.target.value === 'object') {\n            setAboveSchema(\n                replaceAt(aboveSchema, index, {\n                    ...field,\n                    type: e.target.value,\n                    children: [{ key: 'your_key', type: 'string' }],\n                })\n            )\n        } else {\n            setAboveSchema(\n                replaceAt(aboveSchema, index, {\n                    ...field,\n                    type: e.target.value,\n                })\n            )\n        }\n    }\n\n    return (\n        <>\n            <label htmlFor='type'>{label}</label>\n            <select\n                type='text'\n                id='type'\n                name='type'\n                value={field.type}\n                onChange={changeType}\n            >\n                <option value='string'>String</option>\n                <option value='number'>Number</option>\n                <option value='boolean'>Boolean</option>\n                {arrayDepth > 0 && <option value='array'>Array</option>}\n                {objectDepth > 0 && <option value='object'>Object</option>}\n\n                <option value='uuid'>Uuid</option>\n            </select>\n            {field.type === 'array' && (\n                <TypeSelect\n                    arrayDepth={arrayDepth - 1}\n                    objectDepth={objectDepth}\n                    index={0}\n                    setAboveSchema={childrenSetter}\n                    aboveSchema={field.children}\n                    field={field.children[0]}\n                    label='Of: '\n                />\n            )}\n            {field.type === 'object' && (\n                <SchemaInput\n                    arrayDepth={arrayDepth}\n                    objectDepth={objectDepth - 1}\n                    schema={field.children}\n                    setSchema={childrenSetter}\n                />\n            )}\n        </>\n    )\n}\n\nexport default TypeSelect\n","import './SchemaInput.css'\nimport TypeSelect from './TypeSelect'\nimport replaceAt from '../../../helpers/replaceAt'\nimport React from 'react'\n\nconst SchemaInput = ({ schema, setSchema, objectDepth,arrayDepth }) => {\n    const changeKey = e => (index, field) => {\n        const newField = { ...field, key: e.target.value }\n        setSchema(replaceAt(schema, index, newField))\n    }\n\n    const addField = () => {\n        setSchema([...schema, { key: 'your_key_'+(schema.length+1), type: 'string', value: '' }])\n    }\n\n    const deleteField = index => {\n        console.log(index)\n        setSchema(schema.filter((_, i) => i !== index))\n    }\n\n    return (\n        <div className='schema-object'>\n            <fieldset>\n                <legend>object</legend>\n                {schema.map((field, i) => (\n                    <div className='schema-input-container' key={field + i}>\n                        <button\n                            className='icon-button red'\n                            onClick={() => deleteField(i)}\n                        >\n                            -\n                        </button>\n                        <label htmlFor='key'>Key: </label>\n                        <input\n                            className='schema-input'\n                            type='text'\n                            id='key'\n                            name='key'\n                            value={field.key}\n                            onChange={e => changeKey(e)(i, field)}\n                        />\n                        <TypeSelect\n                            objectDepth={objectDepth}\n                            arrayDepth={arrayDepth}\n                            index={i}\n                            setAboveSchema={setSchema}\n                            aboveSchema={schema}\n                            field={field}\n                            label='Type: '\n                        />\n                    </div>\n                ))}\n                <button className='icon-button green' onClick={addField}>\n                    +\n                </button>\n            </fieldset>\n        </div>\n    )\n}\n\nexport default SchemaInput\n","import React from 'react'\nimport ShemaInput from './ShemaInput'\n\nconst Schema = ({schema, setSchema}) => {\n\nconst resetSchema=()=>{\n    setSchema([\n        { key: 'id', type: 'uuid' },\n        { key: 'your_key_2', type: 'string' },\n    ])\n}\n\n\n    return (\n        <div>\n            <h1>Create your schema</h1>\n            <button onClick={resetSchema}>Reset</button>\n            <ShemaInput\n                schema={schema}\n                setSchema={setSchema}\n                objectDepth={4}\n                arrayDepth={4}\n            />\n        </div>\n    )\n}\n\nexport default Schema\n","\nconst getType = value => {\n    if (Array.isArray(value)) {\n        return 'array'\n    } else if (typeof value === 'string') {\n        if (\n            value.match(\n                /\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b/\n            )\n        ) {\n            return 'uuid'\n        } else {\n            return 'string'\n        }\n    } else {\n        return typeof value\n    }\n}\n\nexport default getType","import getType from './getType'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst clearData = data => {\n    let emptyData\n\n    const getValue = item => {\n        switch (getType(item)) {\n            case 'array':\n                return []\n            case 'object':\n                return {}\n            case 'string':\n                return ''\n            case 'number':\n                return 0\n            case 'boolean':\n                return false\n            case 'uuid':\n                return uuidv4()\n            default:\n                break\n        }\n    }\n\n    if (getType(data) === 'array') {\n        emptyData = [...data]\n    } else if (getType(data) === 'object') {\n        emptyData = { ...data }\n    } else {\n        return getValue(data)\n    }\n\n    const makeEmpty = (data, empty) => {\n        switch (getType(data)) {\n            case 'object':\n                Object.keys(data).forEach(key => {\n                    empty[key] = getValue(data[key])\n                    makeEmpty(data[key], empty[key])\n                })\n                break\n            case 'array':\n                data.forEach((item, i) => {\n                    empty[i] = getValue(data[i])\n                    makeEmpty(item, empty[i])\n                })\n                break\n            default:empty = getValue(data)\n                break\n        }\n    }\n\n    makeEmpty(data, emptyData)\n\n    return emptyData\n}\n\nexport default clearData\n","import React from 'react'\nimport replaceAt from '../../../helpers/replaceAt'\nimport DataHub from './DataHub'\nimport clearData from '../../../helpers/clearData'\nimport './ArrayInputs.css'\n\nconst ArrayInputs = ({ data, setData }) => {\n    const childrenSetter = index => state =>\n        setData(replaceAt(data, index, state))\n\n    const addToArray = () => {\n        let clear = clearData(data[0])\n        setData([...data, clear])\n    }\n\n    const deleteArrayItem = (index) => {\nsetData(data.filter((_,i)=>i!==index))\n    }\n\n    return (\n        <div className='rel'>\n            <div className='input-array'>\n                <fieldset>\n                    <legend>array</legend>\n                    {data.map((item, i) => (\n                        <div className='input-from-array'>\n                            <DataHub\n                                key={i}\n                                data={item}\n                                setData={childrenSetter(i)}\n                            />\n                            {i !== 0 && (\n                                <button\n                                    onClick={()=>deleteArrayItem(i)}\n                                    className='icon-button red'\n                                >\n                                    -\n                                </button>\n                            )}\n                        </div>\n                    ))}\n                    <button className='icon-button green' onClick={addToArray}>\n                        +\n                    </button>\n                </fieldset>\n            </div>\n        </div>\n    )\n}\n\nexport default ArrayInputs\n","import React from 'react'\n\nconst InputLabel = ({type, labelKey, of}) => {\n    return (\n        <div>\n            <label>{labelKey}:&nbsp;</label>\n        </div>\n    )\n}\n\nexport default InputLabel\n","import getType from '../../../helpers/getType'\nimport React from 'react'\nimport DataHub from './DataHub'\nimport InputLabel from './InputLabel'\nimport './ObjectInputs.css'\n\nconst ObjectInputs = ({ data, setData }) => {\n    const childrenSetter = dataKey => state =>\n        setData({ ...data, [dataKey]: state })\n\n    return (\n        <>\n            {data && (\n                <div className='rel'>\n                    <div className='input-object'>\n                        <fieldset>\n                            <legend>object</legend>\n                        {Object.keys(data).map((dataKey, i) => {\n                            return (\n                                <div key={i} className='object-label'>\n                                    <div className='label'>\n                                        <InputLabel\n                                            type={getType(data[dataKey])}\n                                            labelKey={dataKey}\n                                        />\n                                    </div>\n\n                                    <DataHub\n                                        data={data[dataKey]}\n                                        setData={childrenSetter(dataKey)}\n                                    />\n                                </div>\n                            )\n                        })}</fieldset>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default ObjectInputs\n","import React, { useRef } from 'react'\nimport './SingleInput.css'\nimport getType from '../../../helpers/getType'\n\nconst SingleInput = ({ value, setData }) => {\n    const textInput = useRef()\n\n    const change = e => {\n        switch (getType(value)) {\n            case 'number':\n                setData(Number(e.target.value))\n                break\n            case 'boolean':\n                setData(e.target.value === 'true' ? true : false)\n                break\n            default:\n                setData(e.target.value)\n                textInput.current.focus()\n                break\n        }\n    }\n\n    const getRows = length => {\n        if (length === 0) {\n            return 1\n        } else {\n            let rows = Math.ceil(length / 33)\n            return rows < 7 ? rows : 6\n        }\n    }\n\n    return (\n        <div>\n            {getType(value) === 'string' && (\n                // <>\n                //     {value.length < 33 ? (\n                //         <input\n                //             ref={textInput}\n                //             className='single-input'\n                //             value={value}\n                //             type='text'\n                //             onChange={change}\n                //             // autoFocus\n                //         />\n                //     ) : (\n                <textarea\n                    ref={textInput}\n                    // autoFocus\n                    className='single-textarea'\n                    rows={getRows(value.length)}\n                    onChange={change}\n                    value={value}\n                />\n                // )}\n                // </>\n            )}\n            {getType(value) === 'number' && (\n                <input\n                    className='single-input'\n                    value={value}\n                    type='number'\n                    onChange={change}\n                />\n            )}\n            {getType(value) === 'uuid' && (\n                <input\n                    className='single-input'\n                    type='text'\n                    readOnly\n                    value={value}\n                />\n            )}\n\n            {getType(value) === 'boolean' && (\n                <>\n                    <label htmlFor='false'>False</label>\n                    <input\n                        type='radio'\n                        id='false'\n                        value='false'\n                        checked={!value}\n                        onChange={change}\n                    />\n                    <label htmlFor='true'>True</label>\n                    <input\n                        type='radio'\n                        id='true'\n                        value='true'\n                        checked={value}\n                        onChange={change}\n                    />\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default SingleInput\n","import React from 'react'\nimport getType from '../../../helpers/getType'\nimport ArrayInputs from './ArrayInputs'\nimport ObjectInputs from './ObjectInputs'\nimport SingleInput from './SingleInput'\n\nconst DataHub = ({ data, setData }) => {\n    return (\n        <div>\n            {getType(data) === 'object' && (\n                <ObjectInputs data={data} setData={setData} />\n            )}\n            {getType(data) === 'array' && (\n                <ArrayInputs data={data} setData={setData} />\n            )}\n            {getType(data) !== 'object' && getType(data) !== 'array' && (\n                <SingleInput value={data} setData={setData} />\n            )}\n        </div>\n    )\n}\n\nexport default DataHub\n","import { v4 as uuidv4 } from 'uuid'\nimport getType from './getType'\n\nconst initData = (schema, newData) => {\n    const initialData = {}\n\n    const getEmptyValue = item => {\n        switch (item.type) {\n            case 'string':\n                return ''\n            case 'number':\n                return 0\n            case 'boolean':\n                return false\n            case 'uuid':\n                return uuidv4()\n            case 'array':\n                return []\n            case 'object':\n                return {}\n            default:\n                break\n        }\n    }\n\n    const isTypeChanged = (schemaType, data) => schemaType !== getType(data)\n\n    const isThereData = Boolean(newData)\n\n    // console.log(isThereData)\n\n    const getValue = (item, data) => {\n        if (isTypeChanged(item.type, data)) {\n            return getEmptyValue(item)\n        } else {\n            return data[item.key]\n        }\n    }\n\n\n\n    const makeInitialData = (schema, data) => {\n        schema.forEach(item => {\n            if (item.type === 'array' || item.type === 'object') {\n                data[item.key] = isThereData\n                    ? getValue(item, data[item.key])\n                    : getEmptyValue(item)\n                makeInitialData(item.children, data[item.key])\n            } else {\n                data[item.key] = getValue(item, data[item.key])\n            }\n        })\n    }\n\n    makeInitialData(schema, initialData)\n\n    return initialData\n}\n\nexport default initData\n","import React from 'react'\nimport DataHub from './DataHub'\nimport initData from '../../../helpers/initData'\n\nconst Inputs = ({ schema, setData, newData, setNewData }) => {\n    const addToData = e => {\n        console.log('add to data');\n        e.preventDefault()\n        setData(prev => [...prev, newData])\n        setNewData(initData(schema, newData))\n    }\n\n    return (\n        <div>\n            <h1>Your inputs</h1>\n            <button onClick={() => setNewData(initData(schema, newData))}>\n                Clear All\n            </button>\n            <form id='input-form' onSubmit={addToData}>\n                <DataHub data={newData} setData={setNewData} />\n            </form>\n                <button onClick={addToData}>Add to data array</button>\n        </div>\n    )\n}\n\nexport default Inputs\n","import './Output.css'\nimport beautify from 'json-beautify'\nimport React, { useState } from 'react'\n\nconst Output = ({ data, setData }) => {\n    const [lineLength, setLineLength] = useState(50)\n    const [indentation, setIndentation] = useState(4)\n\n    const copyData = () => {\n        navigator.clipboard.writeText(\n            beautify(data, null, indentation, lineLength)\n        )\n    }\n\n    const clearData = () => {\n        setData([])\n    }\n\n    return (\n        <div className='output-container'>\n            <h1>Output</h1>\n            <label htmlFor='line-length'>Line length</label>\n            <input\n                type='range'\n                id='line-length'\n                max={50}\n                min={0}\n                value={lineLength}\n                onChange={e => setLineLength(Number(e.target.value))}\n            />\n            <label htmlFor='indentation'>Indentation</label>\n            <input\n                type='range'\n                id='indentation'\n                max={8}\n                min={2}\n                step='2'\n                value={indentation}\n                onChange={e => setIndentation(Number(e.target.value))}\n            />\n            <span>{indentation}</span>\n            <button onClick={copyData}>Copy</button>\n            {setData && <button onClick={clearData}>Clear</button>}\n            \n            <textarea\n                className='output-area'\n                readOnly\n                cols='30'\n                value={beautify(data, null, indentation, lineLength)}\n                rows='30'\n            ></textarea>\n        </div>\n    )\n}\n\nexport default Output\n","import { useState, useEffect } from 'react'\n\nconst useLocalStorage = (key, defaultValue) => {\n    const initial = JSON.parse(localStorage.getItem(key)) || defaultValue\n    const [value, setValue] = useState(initial)\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value))\n    }, [key, value])\n\n    return [value, setValue]\n}\n\nexport default useLocalStorage\n","import './Creator.css'\nimport React, { useState, useEffect } from 'react'\nimport Schema from '../componenets/Creator/Schema/Schema'\nimport Inputs from '../componenets/Creator/Inputs/Inputs'\nimport Output from '../componenets/Creator/Output/Output'\n// import a from './draftdata'\nimport initData from '../helpers/initData'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\n\nfunction Creator() {\n    const [displayInputs, setDisplayInputs] = useState(false)\n    const [displayOutput, setDisplayOutput] = useState(false)\n    const [schema, setSchema] = useLocalStorage('schema',[\n        { key: 'id', type: 'uuid' },\n        { key: 'your_key_2', type: 'string' },\n    ])\n    const [newData, setNewData] = useState(null)\n    const [data, setData] = useLocalStorage('data',[])\n\n    useEffect(() => {\n        setNewData(prev => initData(schema, prev))\n    }, [schema])\n\n    const switchInputs = () => {\n        setDisplayInputs(!displayInputs)\n    }\n    const switchOutput = () => {\n        setDisplayOutput(!displayOutput)\n    }\n\n    return (\n        <div className='App'>\n            <div className='flex'>\n                <div className='flex-container'>\n                    {displayInputs ? (\n                        <Inputs\n                            schema={schema}\n                            setData={setData}\n                            newData={newData}\n                            setNewData={setNewData}\n                        />\n                    ) : (\n                        <Schema schema={schema} setSchema={setSchema} />\n                    )}\n                    <button onClick={switchInputs}>\n                        {displayInputs\n                            ? '<-- Back to the schema'\n                            : 'Show me my inputs -->'}\n                    </button>\n                </div>\n\n                <div className='flex-container'>\n                    {displayOutput ? (\n                        <Output setData={setData} data={data} />\n                    ) : (\n                        <Output data={newData} />\n                    )}\n                    <button onClick={switchOutput}>\n                        {displayOutput\n                            ? '<-- Show current data'\n                            : 'Show the data array -->'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Creator\n","import React from 'react'\n\nconst Searcher = () => {\n    return (\n        <div>\n            Searcher\n        </div>\n    )\n}\n\nexport default Searcher\n","import './App.css'\nimport React from 'react'\nimport Home from './pages/Home'\nimport Creator from './pages/Creator'\nimport Searcher from './pages/Searcher'\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Router>\n                <Routes>\n                    <Route exact path='/' element={<Home />} />\n                    <Route path='/create' element={<Creator />} />\n                    <Route path='/search' element={<Searcher />} />\n                </Routes>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}